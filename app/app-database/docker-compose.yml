version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: andi-postgres
    restart: unless-stopped
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-andi_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-andi_dev_password}
      POSTGRES_DB: ${POSTGRES_DB:-andi_db}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=en_US.utf8 --lc-ctype=en_US.utf8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
      - ./backups:/backups
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-andi_user} -d ${POSTGRES_DB:-andi_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - andi-network

  # Azure Blob Storage Emulator (Azurite)
  azurite:
    image: mcr.microsoft.com/azure-storage/azurite:latest
    container_name: andi-azurite
    restart: unless-stopped
    ports:
      - "10000:10000"  # Blob service
      - "10001:10001"  # Queue service  
      - "10002:10002"  # Table service
    volumes:
      - azurite_data:/data
    command: "azurite --silent --location /data --debug /data/debug.log --loose --skipApiVersionCheck --blobHost 0.0.0.0 --queueHost 0.0.0.0 --tableHost 0.0.0.0"
    networks:
      - andi-network

volumes:
  postgres_data:
    driver: local
  azurite_data:
    driver: local
  # pgadmin_data:
  #   driver: local

networks:
  andi-network:
    driver: bridge